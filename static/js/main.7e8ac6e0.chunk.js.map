{"version":3,"sources":["matrix.js","components/Menu/Menu.jsx","components/Node.jsx","components/Column.jsx","components/Row.jsx","components/Board/Board.jsx","App.js","index.js"],"names":["module","exports","matrix","row","i","push","color","id","wall","start","end","searched","value","Infinity","prev","Menu","className","Node","node","useState","setColor","style","backgroundColor","onMouseDown","console","log","Column","col","Row","display","flexDirection","alignItems","justifyContent","map","index","key","Board","generateMatrix","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FA8BAA,EAAOC,QA9BgB,WAGrB,IAFA,IAAMC,EAAS,GACXC,EAAM,EACDC,EAAI,EAAGA,EAAI,GAAIA,IACtBF,EAAOG,KAAK,IAGd,IAAK,IAAID,EAAI,EAAGA,EAAI,IAAKA,IAAK,CACxBA,EAAI,GAAKA,EAAI,KAAO,IACtBD,GAAO,GAET,IAAIG,EAAQ,OACF,MAANF,IAAWE,EAAQ,QACb,MAANF,IAAWE,EAAQ,OAEvBJ,EAAOC,GAAKE,KAAK,CACfE,GAAIH,EACJE,QACAE,MAAM,EACNC,OAAO,EACPC,KAAK,EACLC,UAAU,EACVC,MAAOC,IACPC,KAAM,OAIV,OAAOZ,I,oKCpBMa,G,YAJF,WACX,OAAO,yBAAKC,UAAU,QAAf,gB,eCwBMC,EA1BF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACCC,mBAASD,EAAKZ,OADf,mBAClBA,EADkB,KACXc,EADW,KAiBzB,OACE,yBACEJ,UAAU,OACVK,MAAO,CAAEC,gBAAiBhB,GAC1BiB,YAXgB,WACJ,QAAVjB,GAA6B,SAAVA,GACDc,EAAV,UAAVd,EAA6B,OAAmB,SAElDkB,QAAQC,IAAIP,EAAKX,QCNNmB,EARA,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAChB,OACE,yBAAKX,UAAU,UACb,kBAAC,EAAD,CAAME,KAAMS,MCgBHC,EAlBH,SAAC,GAAa,IAAXzB,EAAU,EAAVA,IACb,OACE,yBACEa,UAAU,MACVK,MAAO,CACLQ,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,eAAgB,WAGjB7B,EAAI8B,KAAI,SAACN,EAAKO,GAAN,OACP,kBAAC,EAAD,CAAQP,IAAKA,EAAKQ,IAAKD,SCDhBE,EAVD,SAAC,GAAgB,IAAdlC,EAAa,EAAbA,OACf,OACE,yBAAKc,UAAU,SACZd,EAAO+B,KAAI,SAAC9B,EAAK+B,GAAN,OACV,kBAAC,EAAD,CAAK/B,IAAKA,EAAKgC,IAAKD,S,OCFtBhC,E,MAASmC,KAWAC,MATf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAOpC,OAAQA,MCPrBqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7e8ac6e0.chunk.js","sourcesContent":["const generateMatrix = () => {\n  const matrix = [];\n  let row = 0;\n  for (let i = 0; i < 25; i++) {\n    matrix.push([]);\n  }\n\n  for (let i = 0; i < 625; i++) {\n    if (i > 0 && i % 25 === 0) {\n      row += 1;\n    }\n    let color = \"teal\";\n    if (i === 255) color = \"navy\";\n    if (i === 270) color = \"red\";\n\n    matrix[row].push({\n      id: i,\n      color,\n      wall: false,\n      start: false,\n      end: false,\n      searched: false,\n      value: Infinity,\n      prev: null,\n    });\n  }\n\n  return matrix;\n};\n\nmodule.exports = generateMatrix;\n","import React from \"react\";\nimport \"./Menu.css\";\n\nconst Menu = () => {\n  return <div className=\"menu\">Pathfinder</div>;\n};\n\nexport default Menu;\n","import React, { useState } from \"react\";\n\nconst Node = ({ node }) => {\n  const [color, setColor] = useState(node.color);\n  // const [id, setId] = useState(node.id);\n  // const [wall, setWall] = useState(node.wall);\n  // const [start, setStart] = useState(node.start);\n  // const [end, setEnd] = useState(node.end);\n  // const [searched, setSearched] = useState(node.searched);\n  // const [value, setValue] = useState(node.value);\n  // const [prev, setPrev] = useState(node.prev);\n\n  const changeColor = () => {\n    if (color !== \"red\" && color !== \"navy\") {\n      color === \"white\" ? setColor(\"teal\") : setColor(\"white\");\n    }\n    console.log(node.id);\n  };\n\n  return (\n    <div\n      className=\"node\"\n      style={{ backgroundColor: color }}\n      onMouseDown={changeColor}\n    ></div>\n  );\n};\n\nexport default Node;\n","import React from \"react\";\nimport Node from \"./Node\";\nconst Column = ({ col }) => {\n  return (\n    <div className=\"column\">\n      <Node node={col} />\n    </div>\n  );\n};\n\nexport default Column;\n","import React from \"react\";\nimport Column from \"./Column\";\n\nconst Row = ({ row }) => {\n  return (\n    <div\n      className=\"row\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      {row.map((col, index) => (\n        <Column col={col} key={index} />\n      ))}\n    </div>\n  );\n};\n\nexport default Row;\n","import React from \"react\";\nimport \"./Board.css\";\nimport Row from \"../Row\";\n\nconst Board = ({ matrix }) => {\n  return (\n    <div className=\"board\">\n      {matrix.map((row, index) => (\n        <Row row={row} key={index} />\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\n\nimport Menu from \"./components/Menu/Menu\";\nimport Board from \"./components/Board/Board\";\nimport generateMatrix from \"./matrix\";\n\nconst matrix = generateMatrix();\n\nfunction App() {\n  return (\n    <div>\n      <Menu />\n      <Board matrix={matrix} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}